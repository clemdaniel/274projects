   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__vector_14
  12               	__vector_14:
  13               	.LFB1:
  14               		.file 1 "timer.c"
   1:timer.c       **** #include "timer.h"    // Declaration made available here
   2:timer.c       **** #include "sensors.h"
   3:timer.c       **** #include "steering.h"
   4:timer.c       **** 
   5:timer.c       **** 
   6:timer.c       **** // Timer variables defined here
   7:timer.c       **** volatile uint16_t delayTimerCount = 0;            // Definition checked against declaration
   8:timer.c       **** volatile uint8_t  delayTimerRunning = 0;          // Definition checked against declaration
   9:timer.c       **** 
  10:timer.c       **** 
  11:timer.c       **** // Timer 0 interrupt 
  12:timer.c       **** // SIGNAL(SIG_OUTPUT_COMPARE0A)
  13:timer.c       **** ISR(TIMER0_COMPA_vect) {
  15               		.loc 1 13 0
  16               		.cfi_startproc
  17 0000 1F92      		push r1
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 1, -2
  21 0002 0F92      		push r0
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 0, -3
  25 0004 0FB6      		in r0,__SREG__
  26 0006 0F92      		push r0
  27 0008 1124      		clr __zero_reg__
  28 000a 8F93      		push r24
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 24, -4
  32 000c 9F93      		push r25
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 25, -5
  36               	/* prologue: Signal */
  37               	/* frame size = 0 */
  38               	/* stack size = 5 */
  39               	.L__stack_usage = 5
  14:timer.c       ****   if(delayTimerCount) {
  40               		.loc 1 14 0
  41 000e 8091 0000 		lds r24,delayTimerCount
  42 0012 9091 0000 		lds r25,delayTimerCount+1
  43 0016 892B      		or r24,r25
  44 0018 01F0      		breq .L2
  15:timer.c       ****     delayTimerCount--;
  45               		.loc 1 15 0
  46 001a 8091 0000 		lds r24,delayTimerCount
  47 001e 9091 0000 		lds r25,delayTimerCount+1
  48 0022 0197      		sbiw r24,1
  49 0024 9093 0000 		sts delayTimerCount+1,r25
  50 0028 8093 0000 		sts delayTimerCount,r24
  51 002c 00C0      		rjmp .L1
  52               	.L2:
  16:timer.c       ****   } else {
  17:timer.c       ****     delayTimerRunning = 0;
  53               		.loc 1 17 0
  54 002e 1092 0000 		sts delayTimerRunning,__zero_reg__
  55               	.L1:
  56               	/* epilogue start */
  18:timer.c       ****   }
  19:timer.c       ****   // byteTx(140);
  20:timer.c       ****   // byteTx(17);
  21:timer.c       ****   // uint8_t IR = byteRx();
  22:timer.c       ****   // if (IR == 0xFF) {
  23:timer.c       ****   //   stop();
  24:timer.c       ****   // } else {
  25:timer.c       ****   //   if (IR == 0x81) { //left
  26:timer.c       ****   //     turn(523); //pi/6 * 1000
  27:timer.c       ****   //   } else if (IR == 0x83) { //right
  28:timer.c       ****   //     turn(-523);
  29:timer.c       ****   //   } else if (IR == 0x82) { //forward
  30:timer.c       ****   //     drive(100);
  31:timer.c       ****   //   }
  32:timer.c       ****   // }
  33:timer.c       **** }
  57               		.loc 1 33 0
  58 0032 9F91      		pop r25
  59 0034 8F91      		pop r24
  60 0036 0F90      		pop r0
  61 0038 0FBE      		out __SREG__,r0
  62 003a 0F90      		pop r0
  63 003c 1F90      		pop r1
  64 003e 1895      		reti
  65               		.cfi_endproc
  66               	.LFE1:
  68               	.global	__vector_11
  70               	__vector_11:
  71               	.LFB2:
  34:timer.c       **** 
  35:timer.c       **** 
  36:timer.c       **** //SIGNAL(SIG_OUTPUT_COMPARE1A)
  37:timer.c       **** ISR(TIMER1_COMPA_vect) {
  72               		.loc 1 37 0
  73               		.cfi_startproc
  74 0040 1F92      		push r1
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 3
  77               		.cfi_offset 1, -2
  78 0042 0F92      		push r0
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 4
  81               		.cfi_offset 0, -3
  82 0044 0FB6      		in r0,__SREG__
  83 0046 0F92      		push r0
  84 0048 1124      		clr __zero_reg__
  85 004a 2F93      		push r18
  86               	.LCFI6:
  87               		.cfi_def_cfa_offset 5
  88               		.cfi_offset 18, -4
  89 004c 3F93      		push r19
  90               	.LCFI7:
  91               		.cfi_def_cfa_offset 6
  92               		.cfi_offset 19, -5
  93 004e 4F93      		push r20
  94               	.LCFI8:
  95               		.cfi_def_cfa_offset 7
  96               		.cfi_offset 20, -6
  97 0050 5F93      		push r21
  98               	.LCFI9:
  99               		.cfi_def_cfa_offset 8
 100               		.cfi_offset 21, -7
 101 0052 6F93      		push r22
 102               	.LCFI10:
 103               		.cfi_def_cfa_offset 9
 104               		.cfi_offset 22, -8
 105 0054 7F93      		push r23
 106               	.LCFI11:
 107               		.cfi_def_cfa_offset 10
 108               		.cfi_offset 23, -9
 109 0056 8F93      		push r24
 110               	.LCFI12:
 111               		.cfi_def_cfa_offset 11
 112               		.cfi_offset 24, -10
 113 0058 9F93      		push r25
 114               	.LCFI13:
 115               		.cfi_def_cfa_offset 12
 116               		.cfi_offset 25, -11
 117 005a AF93      		push r26
 118               	.LCFI14:
 119               		.cfi_def_cfa_offset 13
 120               		.cfi_offset 26, -12
 121 005c BF93      		push r27
 122               	.LCFI15:
 123               		.cfi_def_cfa_offset 14
 124               		.cfi_offset 27, -13
 125 005e EF93      		push r30
 126               	.LCFI16:
 127               		.cfi_def_cfa_offset 15
 128               		.cfi_offset 30, -14
 129 0060 FF93      		push r31
 130               	.LCFI17:
 131               		.cfi_def_cfa_offset 16
 132               		.cfi_offset 31, -15
 133               	/* prologue: Signal */
 134               	/* frame size = 0 */
 135               	/* stack size = 15 */
 136               	.L__stack_usage = 15
  38:timer.c       ****   //Update and send sensor values
  39:timer.c       ****   //transmit("01");
  40:timer.c       ****   byteTx(142);
 137               		.loc 1 40 0
 138 0062 8EE8      		ldi r24,lo8(-114)
 139 0064 0E94 0000 		call byteTx
 140               	.LVL0:
  41:timer.c       ****   byteTx(17);
 141               		.loc 1 41 0
 142 0068 81E1      		ldi r24,lo8(17)
 143 006a 0E94 0000 		call byteTx
 144               	.LVL1:
  42:timer.c       ****   IR = byteRx();
 145               		.loc 1 42 0
 146 006e 0E94 0000 		call byteRx
 147               	.LVL2:
 148 0072 8093 0000 		sts IR,r24
 149               	/* epilogue start */
  43:timer.c       ****   // byteTx(139);  // leds
  44:timer.c       ****   // byteTx(0);    // set advance and play to OFF
  45:timer.c       ****   // byteTx(255);  // red
  46:timer.c       ****   // byteTx(255);  // full intensity 
  47:timer.c       ****   //readSensors();
  48:timer.c       **** }
 150               		.loc 1 48 0
 151 0076 FF91      		pop r31
 152 0078 EF91      		pop r30
 153 007a BF91      		pop r27
 154 007c AF91      		pop r26
 155 007e 9F91      		pop r25
 156 0080 8F91      		pop r24
 157 0082 7F91      		pop r23
 158 0084 6F91      		pop r22
 159 0086 5F91      		pop r21
 160 0088 4F91      		pop r20
 161 008a 3F91      		pop r19
 162 008c 2F91      		pop r18
 163 008e 0F90      		pop r0
 164 0090 0FBE      		out __SREG__,r0
 165 0092 0F90      		pop r0
 166 0094 1F90      		pop r1
 167 0096 1895      		reti
 168               		.cfi_endproc
 169               	.LFE2:
 171               	.global	__vector_12
 173               	__vector_12:
 174               	.LFB3:
  49:timer.c       **** 
  50:timer.c       **** ISR(TIMER1_COMPB_vect) { 
 175               		.loc 1 50 0
 176               		.cfi_startproc
 177 0098 1F92      		push r1
 178               	.LCFI18:
 179               		.cfi_def_cfa_offset 3
 180               		.cfi_offset 1, -2
 181 009a 0F92      		push r0
 182               	.LCFI19:
 183               		.cfi_def_cfa_offset 4
 184               		.cfi_offset 0, -3
 185 009c 0FB6      		in r0,__SREG__
 186 009e 0F92      		push r0
 187 00a0 1124      		clr __zero_reg__
 188 00a2 2F93      		push r18
 189               	.LCFI20:
 190               		.cfi_def_cfa_offset 5
 191               		.cfi_offset 18, -4
 192 00a4 3F93      		push r19
 193               	.LCFI21:
 194               		.cfi_def_cfa_offset 6
 195               		.cfi_offset 19, -5
 196 00a6 4F93      		push r20
 197               	.LCFI22:
 198               		.cfi_def_cfa_offset 7
 199               		.cfi_offset 20, -6
 200 00a8 5F93      		push r21
 201               	.LCFI23:
 202               		.cfi_def_cfa_offset 8
 203               		.cfi_offset 21, -7
 204 00aa 6F93      		push r22
 205               	.LCFI24:
 206               		.cfi_def_cfa_offset 9
 207               		.cfi_offset 22, -8
 208 00ac 7F93      		push r23
 209               	.LCFI25:
 210               		.cfi_def_cfa_offset 10
 211               		.cfi_offset 23, -9
 212 00ae 8F93      		push r24
 213               	.LCFI26:
 214               		.cfi_def_cfa_offset 11
 215               		.cfi_offset 24, -10
 216 00b0 9F93      		push r25
 217               	.LCFI27:
 218               		.cfi_def_cfa_offset 12
 219               		.cfi_offset 25, -11
 220 00b2 AF93      		push r26
 221               	.LCFI28:
 222               		.cfi_def_cfa_offset 13
 223               		.cfi_offset 26, -12
 224 00b4 BF93      		push r27
 225               	.LCFI29:
 226               		.cfi_def_cfa_offset 14
 227               		.cfi_offset 27, -13
 228 00b6 EF93      		push r30
 229               	.LCFI30:
 230               		.cfi_def_cfa_offset 15
 231               		.cfi_offset 30, -14
 232 00b8 FF93      		push r31
 233               	.LCFI31:
 234               		.cfi_def_cfa_offset 16
 235               		.cfi_offset 31, -15
 236               	/* prologue: Signal */
 237               	/* frame size = 0 */
 238               	/* stack size = 15 */
 239               	.L__stack_usage = 15
  51:timer.c       ****   //transmit("00");
  52:timer.c       ****   byteTx(142);
 240               		.loc 1 52 0
 241 00ba 8EE8      		ldi r24,lo8(-114)
 242 00bc 0E94 0000 		call byteTx
 243               	.LVL3:
  53:timer.c       ****   byteTx(17);
 244               		.loc 1 53 0
 245 00c0 81E1      		ldi r24,lo8(17)
 246 00c2 0E94 0000 		call byteTx
 247               	.LVL4:
  54:timer.c       ****   IR = byteRx();
 248               		.loc 1 54 0
 249 00c6 0E94 0000 		call byteRx
 250               	.LVL5:
 251 00ca 8093 0000 		sts IR,r24
 252               	/* epilogue start */
  55:timer.c       ****   // byteTx(139);  // leds
  56:timer.c       ****   // byteTx(0);    // set advance and play to OFF
  57:timer.c       ****   // byteTx(0);    // green
  58:timer.c       ****   // byteTx(255);  // full intensity 
  59:timer.c       ****   //readSensors();
  60:timer.c       **** }
 253               		.loc 1 60 0
 254 00ce FF91      		pop r31
 255 00d0 EF91      		pop r30
 256 00d2 BF91      		pop r27
 257 00d4 AF91      		pop r26
 258 00d6 9F91      		pop r25
 259 00d8 8F91      		pop r24
 260 00da 7F91      		pop r23
 261 00dc 6F91      		pop r22
 262 00de 5F91      		pop r21
 263 00e0 4F91      		pop r20
 264 00e2 3F91      		pop r19
 265 00e4 2F91      		pop r18
 266 00e6 0F90      		pop r0
 267 00e8 0FBE      		out __SREG__,r0
 268 00ea 0F90      		pop r0
 269 00ec 1F90      		pop r1
 270 00ee 1895      		reti
 271               		.cfi_endproc
 272               	.LFE3:
 274               	.global	setupTimer
 276               	setupTimer:
 277               	.LFB4:
  61:timer.c       **** 
  62:timer.c       **** void setupTimer(void) {
 278               		.loc 1 62 0
 279               		.cfi_startproc
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
  63:timer.c       ****   // ---------------------------------------------------
  64:timer.c       ****   //  Set up timer 0 to generate interrupts @ 1000Hz -- 1ms
  65:timer.c       ****   // ---------------------------------------------------
  66:timer.c       ****   TCCR0A = _BV(WGM01);              // Mode = CTC
 284               		.loc 1 66 0
 285 00f0 82E0      		ldi r24,lo8(2)
 286 00f2 84BD      		out 0x24,r24
  67:timer.c       ****   TCCR0B = (_BV(CS00) | _BV(CS02)); // CS0 | CS2 = CLK/1024
 287               		.loc 1 67 0
 288 00f4 95E0      		ldi r25,lo8(5)
 289 00f6 95BD      		out 0x25,r25
  68:timer.c       ****   OCR0A  = 17;                      // 18432000/(1024*1000) = 18
 290               		.loc 1 68 0
 291 00f8 91E1      		ldi r25,lo8(17)
 292 00fa 97BD      		out 0x27,r25
  69:timer.c       ****   TIMSK0 = _BV(OCIE0A);             // Enable output compare A interrupt
 293               		.loc 1 69 0
 294 00fc 8093 6E00 		sts 110,r24
  70:timer.c       **** 
  71:timer.c       **** 
  72:timer.c       ****   // ---------------------------------------------------
  73:timer.c       ****   //  Set up timer 1 to generate interrupts @ 1Hz -- 1 second
  74:timer.c       ****   // ---------------------------------------------------
  75:timer.c       ****   TCCR1A = 0x00;
 295               		.loc 1 75 0
 296 0100 1092 8000 		sts 128,__zero_reg__
  76:timer.c       ****   TCCR1B = (_BV(WGM12) | _BV(CS10) | _BV(CS12));  // WGM12 | CS10 | CS12 = CTC Mode, CLK/1024
 297               		.loc 1 76 0
 298 0104 8DE0      		ldi r24,lo8(13)
 299 0106 8093 8100 		sts 129,r24
  77:timer.c       ****   OCR1A  = 35999;                                 // 18432000/(1024*.5) = 36,000
 300               		.loc 1 77 0
 301 010a 8FE9      		ldi r24,lo8(-97)
 302 010c 9CE8      		ldi r25,lo8(-116)
 303 010e 9093 8900 		sts 136+1,r25
 304 0112 8093 8800 		sts 136,r24
  78:timer.c       ****   OCR1B  = 17999;                                 // 18432000/(1024*1)  = 18,000
 305               		.loc 1 78 0
 306 0116 8FE4      		ldi r24,lo8(79)
 307 0118 96E4      		ldi r25,lo8(70)
 308 011a 9093 8B00 		sts 138+1,r25
 309 011e 8093 8A00 		sts 138,r24
  79:timer.c       ****   TIMSK1 = _BV(OCIE1A) | _BV(OCIE1B);             // Enable output compare A and B interrupt
 310               		.loc 1 79 0
 311 0122 86E0      		ldi r24,lo8(6)
 312 0124 8093 6F00 		sts 111,r24
 313 0128 0895      		ret
 314               		.cfi_endproc
 315               	.LFE4:
 317               	.global	delayMs
 319               	delayMs:
 320               	.LFB5:
  80:timer.c       **** 
  81:timer.c       **** }
  82:timer.c       **** 
  83:timer.c       **** // Delay for the specified time in ms without updating sensor values
  84:timer.c       **** void delayMs(uint16_t time_ms)
  85:timer.c       **** {
 321               		.loc 1 85 0
 322               		.cfi_startproc
 323               	.LVL6:
 324               	/* prologue: function */
 325               	/* frame size = 0 */
 326               	/* stack size = 0 */
 327               	.L__stack_usage = 0
  86:timer.c       ****   cli();
 328               		.loc 1 86 0
 329               	/* #APP */
 330               	 ;  86 "timer.c" 1
 331 012a F894      		cli
 332               	 ;  0 "" 2
  87:timer.c       ****   delayTimerRunning = 1;
 333               		.loc 1 87 0
 334               	/* #NOAPP */
 335 012c 21E0      		ldi r18,lo8(1)
 336 012e 2093 0000 		sts delayTimerRunning,r18
  88:timer.c       ****   delayTimerCount = time_ms;
 337               		.loc 1 88 0
 338 0132 9093 0000 		sts delayTimerCount+1,r25
 339 0136 8093 0000 		sts delayTimerCount,r24
  89:timer.c       ****   sei();
 340               		.loc 1 89 0
 341               	/* #APP */
 342               	 ;  89 "timer.c" 1
 343 013a 7894      		sei
 344               	 ;  0 "" 2
 345               	.LVL7:
 346               	/* #NOAPP */
 347               	.L9:
  90:timer.c       **** 
  91:timer.c       ****   while(delayTimerRunning) {
 348               		.loc 1 91 0 discriminator 1
 349 013c 8091 0000 		lds r24,delayTimerRunning
 350 0140 8823      		tst r24
 351 0142 01F0      		breq .L11
  92:timer.c       ****     asm("nop");
 352               		.loc 1 92 0
 353               	/* #APP */
 354               	 ;  92 "timer.c" 1
 355 0144 0000      		nop
 356               	 ;  0 "" 2
 357               	/* #NOAPP */
 358 0146 00C0      		rjmp .L9
 359               	.L11:
 360               	/* epilogue start */
  93:timer.c       ****   }
  94:timer.c       **** }...
 361               		.loc 1 94 0
 362 0148 0895      		ret
 363               		.cfi_endproc
 364               	.LFE5:
 366               	.global	delayTimerRunning
 367               		.section .bss
 370               	delayTimerRunning:
 371 0000 00        		.zero	1
 372               	.global	delayTimerCount
 375               	delayTimerCount:
 376 0001 0000      		.zero	2
 377               		.comm	IR,1,1
 378               		.text
 379               	.Letext0:
 380               		.file 2 "/usr/lib/avr/include/stdint.h"
 381               		.file 3 "timer.h"
 382               		.file 4 "cmod.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
     /tmp/ccWd92S2.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccWd92S2.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccWd92S2.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccWd92S2.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccWd92S2.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccWd92S2.s:12     .text:0000000000000000 __vector_14
     /tmp/ccWd92S2.s:375    .bss:0000000000000001 delayTimerCount
     /tmp/ccWd92S2.s:370    .bss:0000000000000000 delayTimerRunning
     /tmp/ccWd92S2.s:70     .text:0000000000000040 __vector_11
                            *COM*:0000000000000001 IR
     /tmp/ccWd92S2.s:173    .text:0000000000000098 __vector_12
     /tmp/ccWd92S2.s:276    .text:00000000000000f0 setupTimer
     /tmp/ccWd92S2.s:319    .text:000000000000012a delayMs

UNDEFINED SYMBOLS
byteTx
byteRx
__do_clear_bss
