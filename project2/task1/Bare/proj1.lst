   1               		.file	"proj1.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.startup,"ax",@progbits
  11               	.global	main
  13               	main:
  14               	.LFB1:
  15               		.file 1 "proj1.c"
   1:proj1.c       **** /**
   2:proj1.c       ****  * CSCE 274 Project 1 Task 2
   3:proj1.c       ****  *		This program causes the robot to drive in a clockwise
   4:proj1.c       ****  *		pentagon when the play button is pressed and a counter-
   5:proj1.c       ****  *		clockwise pentagon when the advance button is pressed.
   6:proj1.c       ****  *
   7:proj1.c       ****  *	Edited by: Daniel Clements, Conor Campbell, Cory Novotny
   8:proj1.c       ****  */
   9:proj1.c       **** 
  10:proj1.c       **** #include "timer.h"
  11:proj1.c       **** #include "cmod.h"
  12:proj1.c       **** #include "iroblib.h"
  13:proj1.c       **** #include "oi.h"
  14:proj1.c       **** #include "steering.h"
  15:proj1.c       **** #include "lights.h"
  16:proj1.c       **** #include <stdlib.h>
  17:proj1.c       **** #include "sensors.h"
  18:proj1.c       **** 
  19:proj1.c       **** // Declare Global variables 
  20:proj1.c       **** int main() {
  16               		.loc 1 20 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  21:proj1.c       ****   // Set up Create and module
  22:proj1.c       ****   initializeCommandModule();
  22               		.loc 1 22 0
  23 0000 0E94 0000 		call initializeCommandModule
  24               	.LVL0:
  23:proj1.c       ****     
  24:proj1.c       ****   powerOnRobot();
  25               		.loc 1 24 0
  26 0004 0E94 0000 		call powerOnRobot
  27               	.LVL1:
  25:proj1.c       ****     // Is the Robot on
  26:proj1.c       ****   byteTx(CmdStart);
  28               		.loc 1 26 0
  29 0008 80E8      		ldi r24,lo8(-128)
  30 000a 0E94 0000 		call byteTx
  31               	.LVL2:
  27:proj1.c       ****     // Start the create
  28:proj1.c       ****   baud(Baud57600);
  32               		.loc 1 28 0
  33 000e 8AE0      		ldi r24,lo8(10)
  34 0010 0E94 0000 		call baud
  35               	.LVL3:
  29:proj1.c       ****     // Set the baud rate for the Create and Command Module
  30:proj1.c       ****   defineSongs();
  36               		.loc 1 30 0
  37 0014 0E94 0000 		call defineSongs
  38               	.LVL4:
  31:proj1.c       ****     // Define some songs so that we know the robot is on.
  32:proj1.c       ****   byteTx(CmdControl);
  39               		.loc 1 32 0
  40 0018 82E8      		ldi r24,lo8(-126)
  41 001a 0E94 0000 		call byteTx
  42               	.LVL5:
  33:proj1.c       ****     // Deprecated form of safe mode. I use it because it will
  34:proj1.c       ****     // turn of all LEDs, so it's essentially a reset.
  35:proj1.c       ****   byteTx(CmdFull);
  43               		.loc 1 35 0
  44 001e 84E8      		ldi r24,lo8(-124)
  45 0020 0E94 0000 		call byteTx
  46               	.LVL6:
  36:proj1.c       ****     // We are operating in FULL mode.
  37:proj1.c       **** 
  38:proj1.c       ****   // CSCE 274 students: I would make sure the robot stops. 
  39:proj1.c       ****   //                    As a precaution for the robot and your grade.
  40:proj1.c       ****   stop();
  47               		.loc 1 40 0
  48 0024 0E94 0000 		call stop
  49               	.LVL7:
  41:proj1.c       **** 
  42:proj1.c       ****   // Play the reset song and wait while it plays.
  43:proj1.c       ****   byteTx(CmdPlay);
  50               		.loc 1 43 0
  51 0028 8DE8      		ldi r24,lo8(-115)
  52 002a 0E94 0000 		call byteTx
  53               	.LVL8:
  44:proj1.c       ****   byteTx(RESET_SONG);
  54               		.loc 1 44 0
  55 002e 80E0      		ldi r24,0
  56 0030 0E94 0000 		call byteTx
  57               	.LVL9:
  45:proj1.c       ****   delayMs(750);
  58               		.loc 1 45 0
  59 0034 8EEE      		ldi r24,lo8(-18)
  60 0036 92E0      		ldi r25,lo8(2)
  61 0038 0E94 0000 		call delayMs
  62               	.LVL10:
  46:proj1.c       **** 
  47:proj1.c       ****   //Turn power button on
  48:proj1.c       ****   // changePowerLightRed();
  49:proj1.c       **** 
  50:proj1.c       ****   LED1On;
  63               		.loc 1 50 0
  64 003c 5D98      		cbi 0xb,5
  65               	.L3:
  51:proj1.c       **** 
  52:proj1.c       **** 
  53:proj1.c       ****   // Infinite operation loop
  54:proj1.c       ****   for(;;) {
  55:proj1.c       ****     if(UserButtonPressed) {
  66               		.loc 1 55 0
  67 003e 4C99      		sbic 0x9,4
  68 0040 00C0      		rjmp .L3
  56:proj1.c       ****       powerOffRobot();
  69               		.loc 1 56 0
  70 0042 0E94 0000 		call powerOffRobot
  71               	.LVL11:
  57:proj1.c       ****       exit(1);
  72               		.loc 1 57 0
  73 0046 81E0      		ldi r24,lo8(1)
  74 0048 90E0      		ldi r25,0
  75 004a 0E94 0000 		call exit
  76               	.LVL12:
  77               		.cfi_endproc
  78               	.LFE1:
  80               		.text
  81               	.Letext0:
  82               		.file 2 "/usr/lib/avr/include/stdint.h"
  83               		.file 3 "cmod.h"
  84               		.file 4 "iroblib.h"
  85               		.file 5 "steering.h"
  86               		.file 6 "timer.h"
  87               		.file 7 "/usr/lib/avr/include/stdlib.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 proj1.c
     /tmp/cceCcnqf.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cceCcnqf.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cceCcnqf.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cceCcnqf.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cceCcnqf.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cceCcnqf.s:13     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
initializeCommandModule
powerOnRobot
byteTx
baud
defineSongs
stop
delayMs
powerOffRobot
exit
