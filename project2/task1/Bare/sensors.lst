   1               		.file	"sensors.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	transmit
  12               	transmit:
  13               	.LFB5:
  14               		.file 1 "sensors.c"
   1:sensors.c     **** #include "sensors.h"
   2:sensors.c     **** 
   3:sensors.c     **** void readSensors(void) {
   4:sensors.c     **** 
   5:sensors.c     **** 	readWallSignal();
   6:sensors.c     **** 	readCliffSensors();
   7:sensors.c     **** 	readGroupPacket3();
   8:sensors.c     **** } 
   9:sensors.c     **** 
  10:sensors.c     **** void readWallSignal(void) {
  11:sensors.c     **** 		
  12:sensors.c     **** 		uint16_t wall;
  13:sensors.c     **** 		uint8_t hi, lo;
  14:sensors.c     **** 		byteTx(142);
  15:sensors.c     **** 		byteTx(WallPID);
  16:sensors.c     **** 		hi = byteRx();
  17:sensors.c     **** 		lo = byteRx();
  18:sensors.c     **** 		wall = twoUBytesIntoInt(hi, lo);
  19:sensors.c     **** 		char wallArray[11];
  20:sensors.c     **** 		sprintf(wallArray, "Wall: %i", (int)wall);
  21:sensors.c     **** 		transmit(wallArray);
  22:sensors.c     **** 
  23:sensors.c     **** }
  24:sensors.c     **** 
  25:sensors.c     **** void readCliffSensors(void) {
  26:sensors.c     **** 	
  27:sensors.c     **** 		uint16_t cliffLeft, cliffFrontLeft, cliffFrontRight, cliffRight;
  28:sensors.c     **** 		uint8_t hi, lo;
  29:sensors.c     **** 		byteTx(142);
  30:sensors.c     **** 		byteTx(CliffLeftPID);
  31:sensors.c     **** 		hi = byteRx();
  32:sensors.c     **** 		lo = byteRx();
  33:sensors.c     **** 		cliffLeft = twoUBytesIntoInt(hi, lo);
  34:sensors.c     **** 		char cliffLeftArray[17];
  35:sensors.c     **** 		sprintf(cliffLeftArray, "Cliff Left: %i", (int)cliffLeft);
  36:sensors.c     **** 		transmit(cliffLeftArray);
  37:sensors.c     **** 
  38:sensors.c     **** 		byteTx(142);
  39:sensors.c     **** 		byteTx(CliffFrontLeftPID);
  40:sensors.c     **** 		hi = byteRx();
  41:sensors.c     **** 		lo = byteRx();
  42:sensors.c     **** 		cliffFrontLeft = twoUBytesIntoInt(hi, lo);
  43:sensors.c     **** 		char cliffFrontLeftArray[23];
  44:sensors.c     **** 		sprintf(cliffFrontLeftArray, "Cliff Front Left: %i", (int)cliffFrontLeft);
  45:sensors.c     **** 		transmit(cliffFrontLeftArray);
  46:sensors.c     **** 
  47:sensors.c     **** 		byteTx(142);
  48:sensors.c     **** 		byteTx(CliffFrontRightPID);
  49:sensors.c     **** 		hi = byteRx();
  50:sensors.c     **** 		lo = byteRx();
  51:sensors.c     **** 		cliffFrontRight = twoUBytesIntoInt(hi, lo);
  52:sensors.c     **** 		char cliffFrontRightArray[24];
  53:sensors.c     **** 		sprintf(cliffFrontRightArray, "Cliff Front Right: %i", (int)cliffFrontRight);
  54:sensors.c     **** 		transmit(cliffFrontRightArray);
  55:sensors.c     **** 
  56:sensors.c     **** 		byteTx(142);
  57:sensors.c     **** 		byteTx(CliffRightPID);
  58:sensors.c     **** 		hi = byteRx();
  59:sensors.c     **** 		lo = byteRx();
  60:sensors.c     **** 		cliffRight = twoUBytesIntoInt(hi, lo);
  61:sensors.c     **** 		char cliffRightArray[18];
  62:sensors.c     **** 		sprintf(cliffRightArray, "Cliff Right: %i", (int)cliffRight);
  63:sensors.c     **** 		transmit(cliffRightArray);
  64:sensors.c     **** 
  65:sensors.c     **** }
  66:sensors.c     **** 
  67:sensors.c     **** void readGroupPacket3(void) {
  68:sensors.c     **** 	//read group packet 3
  69:sensors.c     **** 	uint8_t i;
  70:sensors.c     **** 	uint8_t group3Data[10];  /* array for group packet ID 3 data */
  71:sensors.c     **** 	while(UCSR0A & 0x80) /* clear the receive buffer */
  72:sensors.c     **** 	  i = UDR0;
  73:sensors.c     **** 	byteTx(142);  /* sensor opcode */
  74:sensors.c     **** 	byteTx(3);   /* send request for packet 3 */
  75:sensors.c     **** 	for(i = 0; i < 10; i++) //10 is size of group
  76:sensors.c     **** 	{
  77:sensors.c     **** 	  group3Data[i] = byteRx();  /* read each sensor byte */
  78:sensors.c     **** 	}
  79:sensors.c     **** 
  80:sensors.c     **** 	//charging state - max length == 17
  81:sensors.c     **** 	char chargingState[17];
  82:sensors.c     **** 	sprintf(chargingState, "Charging State: %i", (int)group3Data[0]);
  83:sensors.c     **** 	transmit(chargingState);
  84:sensors.c     **** 
  85:sensors.c     **** 	//voltage - max length == 17
  86:sensors.c     **** 	uint16_t voltage = twoUBytesIntoInt(group3Data[1], group3Data[2]);
  87:sensors.c     **** 	char voltageArray[15];
  88:sensors.c     **** 	sprintf(voltageArray, "Voltage: %i", (int)voltage);
  89:sensors.c     **** 	transmit(voltageArray);
  90:sensors.c     **** 
  91:sensors.c     **** 	//signed int
  92:sensors.c     **** 	int16_t current = twoBytesIntoInt(group3Data[3], group3Data[4]);
  93:sensors.c     **** 	char currentArray[16];
  94:sensors.c     **** 	sprintf(currentArray, "Current: %i", (int)current);
  95:sensors.c     **** 	transmit(currentArray);
  96:sensors.c     **** 
  97:sensors.c     **** 	//signed int
  98:sensors.c     **** 	int16_t battTemp = group3Data[5];
  99:sensors.c     **** 	char battTempArray[26];
 100:sensors.c     **** 	sprintf(battTempArray, "Battery Temperature: %i", (int)battTemp);
 101:sensors.c     **** 	transmit(battTempArray);
 102:sensors.c     **** 
 103:sensors.c     **** 	uint16_t batteryCharge = twoUBytesIntoInt(group3Data[6], group3Data[7]);
 104:sensors.c     **** 	char batteryChargeArray[22];
 105:sensors.c     **** 	sprintf(batteryChargeArray, "Battery Charge: %i", (int)batteryCharge);
 106:sensors.c     **** 	transmit(batteryChargeArray);
 107:sensors.c     **** 
 108:sensors.c     **** 	uint16_t batteryCapacity = twoUBytesIntoInt(group3Data[8], group3Data[9]);
 109:sensors.c     **** 	char batteryCapacityArray[24];
 110:sensors.c     **** 	sprintf(batteryCapacityArray, "Battery Capacity: %i", (int)batteryCapacity);
 111:sensors.c     **** 	transmit(batteryCapacityArray);
 112:sensors.c     **** }
 113:sensors.c     **** 
 114:sensors.c     **** int transmit(char* string) {
  15               		.loc 1 114 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 EF92      		push r14
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 14, -2
  22 0002 FF92      		push r15
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 15, -3
  26 0004 0F93      		push r16
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 16, -4
  30 0006 1F93      		push r17
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 6
  33               		.cfi_offset 17, -5
  34 0008 CF93      		push r28
  35               	.LCFI4:
  36               		.cfi_def_cfa_offset 7
  37               		.cfi_offset 28, -6
  38 000a DF93      		push r29
  39               	.LCFI5:
  40               		.cfi_def_cfa_offset 8
  41               		.cfi_offset 29, -7
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 6 */
  45               	.L__stack_usage = 6
  46 000c 8C01      		movw r16,r24
 115:sensors.c     ****     int i;
 116:sensors.c     ****     int length = strlen(string);
  47               		.loc 1 116 0
  48 000e EC01      		movw r28,r24
  49               		0:
  50 0010 0990      		ld __tmp_reg__,Y+
  51 0012 0020      		tst __tmp_reg__
  52 0014 01F4      		brne 0b
  53 0016 2197      		sbiw r28,1
  54 0018 C81B      		sub r28,r24
  55 001a D90B      		sbc r29,r25
  56               	.LVL1:
 117:sensors.c     ****     
 118:sensors.c     ****     for (i=0; i<length; i++) {
  57               		.loc 1 118 0
  58 001c 7C01      		movw r14,r24
  59               	.LVL2:
  60               	.L2:
  61 001e C701      		movw r24,r14
  62 0020 801B      		sub r24,r16
  63 0022 910B      		sbc r25,r17
  64               		.loc 1 118 0 is_stmt 0 discriminator 1
  65 0024 8C17      		cp r24,r28
  66 0026 9D07      		cpc r25,r29
  67 0028 04F4      		brge .L5
 119:sensors.c     ****         byteTx(string[i]);
  68               		.loc 1 119 0 is_stmt 1 discriminator 2
  69 002a F701      		movw r30,r14
  70 002c 8191      		ld r24,Z+
  71 002e 7F01      		movw r14,r30
  72               	.LVL3:
  73 0030 0E94 0000 		call byteTx
  74               	.LVL4:
  75 0034 00C0      		rjmp .L2
  76               	.L5:
 120:sensors.c     ****     }
 121:sensors.c     **** 
 122:sensors.c     ****     return length;
 123:sensors.c     **** }
  77               		.loc 1 123 0
  78 0036 CE01      		movw r24,r28
  79               	/* epilogue start */
  80 0038 DF91      		pop r29
  81 003a CF91      		pop r28
  82               	.LVL5:
  83 003c 1F91      		pop r17
  84 003e 0F91      		pop r16
  85               	.LVL6:
  86 0040 FF90      		pop r15
  87 0042 EF90      		pop r14
  88               	.LVL7:
  89 0044 0895      		ret
  90               		.cfi_endproc
  91               	.LFE5:
  93               		.section	.rodata.str1.1,"aMS",@progbits,1
  94               	.LC0:
  95 0000 5761 6C6C 		.string	"Wall: %i"
  95      3A20 2569 
  95      00
  96               		.text
  97               	.global	readWallSignal
  99               	readWallSignal:
 100               	.LFB2:
  10:sensors.c     **** void readWallSignal(void) {
 101               		.loc 1 10 0
 102               		.cfi_startproc
 103 0046 0F93      		push r16
 104               	.LCFI6:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 16, -2
 107 0048 1F93      		push r17
 108               	.LCFI7:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 17, -3
 111 004a CF93      		push r28
 112               	.LCFI8:
 113               		.cfi_def_cfa_offset 5
 114               		.cfi_offset 28, -4
 115 004c DF93      		push r29
 116               	.LCFI9:
 117               		.cfi_def_cfa_offset 6
 118               		.cfi_offset 29, -5
 119 004e CDB7      		in r28,__SP_L__
 120 0050 DEB7      		in r29,__SP_H__
 121               	.LCFI10:
 122               		.cfi_def_cfa_register 28
 123 0052 2B97      		sbiw r28,11
 124               	.LCFI11:
 125               		.cfi_def_cfa_offset 17
 126 0054 0FB6      		in __tmp_reg__,__SREG__
 127 0056 F894      		cli
 128 0058 DEBF      		out __SP_H__,r29
 129 005a 0FBE      		out __SREG__,__tmp_reg__
 130 005c CDBF      		out __SP_L__,r28
 131               	/* prologue: function */
 132               	/* frame size = 11 */
 133               	/* stack size = 15 */
 134               	.L__stack_usage = 15
  14:sensors.c     **** 		byteTx(142);
 135               		.loc 1 14 0
 136 005e 8EE8      		ldi r24,lo8(-114)
 137 0060 0E94 0000 		call byteTx
 138               	.LVL8:
  15:sensors.c     **** 		byteTx(WallPID);
 139               		.loc 1 15 0
 140 0064 8BE1      		ldi r24,lo8(27)
 141 0066 0E94 0000 		call byteTx
 142               	.LVL9:
  16:sensors.c     **** 		hi = byteRx();
 143               		.loc 1 16 0
 144 006a 0E94 0000 		call byteRx
 145               	.LVL10:
 146 006e 182F      		mov r17,r24
 147               	.LVL11:
  17:sensors.c     **** 		lo = byteRx();
 148               		.loc 1 17 0
 149 0070 0E94 0000 		call byteRx
 150               	.LVL12:
 151               	.LBB20:
 152               	.LBB21:
 124:sensors.c     **** 
 125:sensors.c     **** uint16_t twoUBytesIntoInt(uint8_t hi, uint8_t lo) {
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 153               		.loc 1 126 0
 154 0074 212F      		mov r18,r17
 155 0076 30E0      		ldi r19,0
 156 0078 322F      		mov r19,r18
 157 007a 2227      		clr r18
 127:sensors.c     **** 	total = total | lo;
 158               		.loc 1 127 0
 159 007c 282B      		or r18,r24
 160               	.LBE21:
 161               	.LBE20:
  20:sensors.c     **** 		sprintf(wallArray, "Wall: %i", (int)wall);
 162               		.loc 1 20 0
 163 007e 3F93      		push r19
 164 0080 2F93      		push r18
 165 0082 80E0      		ldi r24,lo8(.LC0)
 166 0084 90E0      		ldi r25,hi8(.LC0)
 167               	.LVL13:
 168 0086 9F93      		push r25
 169 0088 8F93      		push r24
 170 008a 8E01      		movw r16,r28
 171 008c 0F5F      		subi r16,-1
 172 008e 1F4F      		sbci r17,-1
 173 0090 1F93      		push r17
 174 0092 0F93      		push r16
 175 0094 0E94 0000 		call sprintf
 176               	.LVL14:
  21:sensors.c     **** 		transmit(wallArray);
 177               		.loc 1 21 0
 178 0098 C801      		movw r24,r16
 179 009a 0E94 0000 		call transmit
 180               	.LVL15:
 181 009e 0F90      		pop __tmp_reg__
 182 00a0 0F90      		pop __tmp_reg__
 183 00a2 0F90      		pop __tmp_reg__
 184 00a4 0F90      		pop __tmp_reg__
 185 00a6 0F90      		pop __tmp_reg__
 186 00a8 0F90      		pop __tmp_reg__
 187               	/* epilogue start */
  23:sensors.c     **** }
 188               		.loc 1 23 0
 189 00aa 2B96      		adiw r28,11
 190 00ac 0FB6      		in __tmp_reg__,__SREG__
 191 00ae F894      		cli
 192 00b0 DEBF      		out __SP_H__,r29
 193 00b2 0FBE      		out __SREG__,__tmp_reg__
 194 00b4 CDBF      		out __SP_L__,r28
 195 00b6 DF91      		pop r29
 196 00b8 CF91      		pop r28
 197 00ba 1F91      		pop r17
 198               	.LVL16:
 199 00bc 0F91      		pop r16
 200 00be 0895      		ret
 201               		.cfi_endproc
 202               	.LFE2:
 204               		.section	.rodata.str1.1
 205               	.LC1:
 206 0009 436C 6966 		.string	"Cliff Left: %i"
 206      6620 4C65 
 206      6674 3A20 
 206      2569 00
 207               	.LC2:
 208 0018 436C 6966 		.string	"Cliff Front Left: %i"
 208      6620 4672 
 208      6F6E 7420 
 208      4C65 6674 
 208      3A20 2569 
 209               	.LC3:
 210 002d 436C 6966 		.string	"Cliff Front Right: %i"
 210      6620 4672 
 210      6F6E 7420 
 210      5269 6768 
 210      743A 2025 
 211               	.LC4:
 212 0043 436C 6966 		.string	"Cliff Right: %i"
 212      6620 5269 
 212      6768 743A 
 212      2025 6900 
 213               		.text
 214               	.global	readCliffSensors
 216               	readCliffSensors:
 217               	.LFB3:
  25:sensors.c     **** void readCliffSensors(void) {
 218               		.loc 1 25 0
 219               		.cfi_startproc
 220 00c0 0F93      		push r16
 221               	.LCFI12:
 222               		.cfi_def_cfa_offset 3
 223               		.cfi_offset 16, -2
 224 00c2 1F93      		push r17
 225               	.LCFI13:
 226               		.cfi_def_cfa_offset 4
 227               		.cfi_offset 17, -3
 228 00c4 CF93      		push r28
 229               	.LCFI14:
 230               		.cfi_def_cfa_offset 5
 231               		.cfi_offset 28, -4
 232 00c6 DF93      		push r29
 233               	.LCFI15:
 234               		.cfi_def_cfa_offset 6
 235               		.cfi_offset 29, -5
 236 00c8 CDB7      		in r28,__SP_L__
 237 00ca DEB7      		in r29,__SP_H__
 238               	.LCFI16:
 239               		.cfi_def_cfa_register 28
 240 00cc C255      		subi r28,82
 241 00ce D109      		sbc r29,__zero_reg__
 242               	.LCFI17:
 243               		.cfi_def_cfa_offset 88
 244 00d0 0FB6      		in __tmp_reg__,__SREG__
 245 00d2 F894      		cli
 246 00d4 DEBF      		out __SP_H__,r29
 247 00d6 0FBE      		out __SREG__,__tmp_reg__
 248 00d8 CDBF      		out __SP_L__,r28
 249               	/* prologue: function */
 250               	/* frame size = 82 */
 251               	/* stack size = 86 */
 252               	.L__stack_usage = 86
  29:sensors.c     **** 		byteTx(142);
 253               		.loc 1 29 0
 254 00da 8EE8      		ldi r24,lo8(-114)
 255 00dc 0E94 0000 		call byteTx
 256               	.LVL17:
  30:sensors.c     **** 		byteTx(CliffLeftPID);
 257               		.loc 1 30 0
 258 00e0 8CE1      		ldi r24,lo8(28)
 259 00e2 0E94 0000 		call byteTx
 260               	.LVL18:
  31:sensors.c     **** 		hi = byteRx();
 261               		.loc 1 31 0
 262 00e6 0E94 0000 		call byteRx
 263               	.LVL19:
 264 00ea 182F      		mov r17,r24
 265               	.LVL20:
  32:sensors.c     **** 		lo = byteRx();
 266               		.loc 1 32 0
 267 00ec 0E94 0000 		call byteRx
 268               	.LVL21:
 269               	.LBB22:
 270               	.LBB23:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 271               		.loc 1 126 0
 272 00f0 212F      		mov r18,r17
 273 00f2 30E0      		ldi r19,0
 274 00f4 322F      		mov r19,r18
 275 00f6 2227      		clr r18
 276               		.loc 1 127 0
 277 00f8 282B      		or r18,r24
 278               	.LBE23:
 279               	.LBE22:
  35:sensors.c     **** 		sprintf(cliffLeftArray, "Cliff Left: %i", (int)cliffLeft);
 280               		.loc 1 35 0
 281 00fa 3F93      		push r19
 282 00fc 2F93      		push r18
 283 00fe 80E0      		ldi r24,lo8(.LC1)
 284 0100 90E0      		ldi r25,hi8(.LC1)
 285               	.LVL22:
 286 0102 9F93      		push r25
 287 0104 8F93      		push r24
 288 0106 8E01      		movw r16,r28
 289 0108 0E5B      		subi r16,-66
 290 010a 1F4F      		sbci r17,-1
 291 010c 1F93      		push r17
 292 010e 0F93      		push r16
 293 0110 0E94 0000 		call sprintf
 294               	.LVL23:
  36:sensors.c     **** 		transmit(cliffLeftArray);
 295               		.loc 1 36 0
 296 0114 C801      		movw r24,r16
 297 0116 0E94 0000 		call transmit
 298               	.LVL24:
  38:sensors.c     **** 		byteTx(142);
 299               		.loc 1 38 0
 300 011a 8EE8      		ldi r24,lo8(-114)
 301 011c 0E94 0000 		call byteTx
 302               	.LVL25:
  39:sensors.c     **** 		byteTx(CliffFrontLeftPID);
 303               		.loc 1 39 0
 304 0120 8DE1      		ldi r24,lo8(29)
 305 0122 0E94 0000 		call byteTx
 306               	.LVL26:
  40:sensors.c     **** 		hi = byteRx();
 307               		.loc 1 40 0
 308 0126 0E94 0000 		call byteRx
 309               	.LVL27:
 310 012a 182F      		mov r17,r24
 311               	.LVL28:
  41:sensors.c     **** 		lo = byteRx();
 312               		.loc 1 41 0
 313 012c 0E94 0000 		call byteRx
 314               	.LVL29:
 315               	.LBB24:
 316               	.LBB25:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 317               		.loc 1 126 0
 318 0130 212F      		mov r18,r17
 319 0132 30E0      		ldi r19,0
 320 0134 322F      		mov r19,r18
 321 0136 2227      		clr r18
 322               		.loc 1 127 0
 323 0138 282B      		or r18,r24
 324               	.LBE25:
 325               	.LBE24:
  44:sensors.c     **** 		sprintf(cliffFrontLeftArray, "Cliff Front Left: %i", (int)cliffFrontLeft);
 326               		.loc 1 44 0
 327 013a 3F93      		push r19
 328 013c 2F93      		push r18
 329 013e 80E0      		ldi r24,lo8(.LC2)
 330 0140 90E0      		ldi r25,hi8(.LC2)
 331               	.LVL30:
 332 0142 9F93      		push r25
 333 0144 8F93      		push r24
 334 0146 8E01      		movw r16,r28
 335 0148 075E      		subi r16,-25
 336 014a 1F4F      		sbci r17,-1
 337 014c 1F93      		push r17
 338 014e 0F93      		push r16
 339 0150 0E94 0000 		call sprintf
 340               	.LVL31:
  45:sensors.c     **** 		transmit(cliffFrontLeftArray);
 341               		.loc 1 45 0
 342 0154 C801      		movw r24,r16
 343 0156 0E94 0000 		call transmit
 344               	.LVL32:
  47:sensors.c     **** 		byteTx(142);
 345               		.loc 1 47 0
 346 015a 8EE8      		ldi r24,lo8(-114)
 347 015c 0E94 0000 		call byteTx
 348               	.LVL33:
  48:sensors.c     **** 		byteTx(CliffFrontRightPID);
 349               		.loc 1 48 0
 350 0160 8EE1      		ldi r24,lo8(30)
 351 0162 0E94 0000 		call byteTx
 352               	.LVL34:
  49:sensors.c     **** 		hi = byteRx();
 353               		.loc 1 49 0
 354 0166 0E94 0000 		call byteRx
 355               	.LVL35:
 356 016a 182F      		mov r17,r24
 357               	.LVL36:
  50:sensors.c     **** 		lo = byteRx();
 358               		.loc 1 50 0
 359 016c 0E94 0000 		call byteRx
 360               	.LVL37:
 361               	.LBB26:
 362               	.LBB27:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 363               		.loc 1 126 0
 364 0170 212F      		mov r18,r17
 365 0172 30E0      		ldi r19,0
 366 0174 322F      		mov r19,r18
 367 0176 2227      		clr r18
 368               		.loc 1 127 0
 369 0178 282B      		or r18,r24
 370               	.LBE27:
 371               	.LBE26:
  53:sensors.c     **** 		sprintf(cliffFrontRightArray, "Cliff Front Right: %i", (int)cliffFrontRight);
 372               		.loc 1 53 0
 373 017a 3F93      		push r19
 374 017c 2F93      		push r18
 375 017e 80E0      		ldi r24,lo8(.LC3)
 376 0180 90E0      		ldi r25,hi8(.LC3)
 377               	.LVL38:
 378 0182 9F93      		push r25
 379 0184 8F93      		push r24
 380 0186 8E01      		movw r16,r28
 381 0188 0F5F      		subi r16,-1
 382 018a 1F4F      		sbci r17,-1
 383 018c 1F93      		push r17
 384 018e 0F93      		push r16
 385 0190 0E94 0000 		call sprintf
 386               	.LVL39:
  54:sensors.c     **** 		transmit(cliffFrontRightArray);
 387               		.loc 1 54 0
 388 0194 C801      		movw r24,r16
 389 0196 0E94 0000 		call transmit
 390               	.LVL40:
  56:sensors.c     **** 		byteTx(142);
 391               		.loc 1 56 0
 392 019a 8EE8      		ldi r24,lo8(-114)
 393 019c 0E94 0000 		call byteTx
 394               	.LVL41:
  57:sensors.c     **** 		byteTx(CliffRightPID);
 395               		.loc 1 57 0
 396 01a0 8FE1      		ldi r24,lo8(31)
 397 01a2 0E94 0000 		call byteTx
 398               	.LVL42:
  58:sensors.c     **** 		hi = byteRx();
 399               		.loc 1 58 0
 400 01a6 0E94 0000 		call byteRx
 401               	.LVL43:
 402 01aa 182F      		mov r17,r24
 403               	.LVL44:
  59:sensors.c     **** 		lo = byteRx();
 404               		.loc 1 59 0
 405 01ac 0E94 0000 		call byteRx
 406               	.LVL45:
 407               	.LBB28:
 408               	.LBB29:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 409               		.loc 1 126 0
 410 01b0 212F      		mov r18,r17
 411 01b2 30E0      		ldi r19,0
 412 01b4 322F      		mov r19,r18
 413 01b6 2227      		clr r18
 414               		.loc 1 127 0
 415 01b8 282B      		or r18,r24
 416               	.LBE29:
 417               	.LBE28:
  62:sensors.c     **** 		sprintf(cliffRightArray, "Cliff Right: %i", (int)cliffRight);
 418               		.loc 1 62 0
 419 01ba 3F93      		push r19
 420 01bc 2F93      		push r18
 421 01be 80E0      		ldi r24,lo8(.LC4)
 422 01c0 90E0      		ldi r25,hi8(.LC4)
 423               	.LVL46:
 424 01c2 9F93      		push r25
 425 01c4 8F93      		push r24
 426 01c6 8E01      		movw r16,r28
 427 01c8 005D      		subi r16,-48
 428 01ca 1F4F      		sbci r17,-1
 429 01cc 1F93      		push r17
 430 01ce 0F93      		push r16
 431 01d0 0E94 0000 		call sprintf
 432               	.LVL47:
  63:sensors.c     **** 		transmit(cliffRightArray);
 433               		.loc 1 63 0
 434 01d4 C801      		movw r24,r16
 435 01d6 0E94 0000 		call transmit
 436               	.LVL48:
 437 01da 0FB6      		in __tmp_reg__,__SREG__
 438 01dc F894      		cli
 439 01de DEBF      		out __SP_H__,r29
 440 01e0 0FBE      		out __SREG__,__tmp_reg__
 441 01e2 CDBF      		out __SP_L__,r28
 442               	/* epilogue start */
  65:sensors.c     **** }
 443               		.loc 1 65 0
 444 01e4 CE5A      		subi r28,-82
 445 01e6 DF4F      		sbci r29,-1
 446 01e8 0FB6      		in __tmp_reg__,__SREG__
 447 01ea F894      		cli
 448 01ec DEBF      		out __SP_H__,r29
 449 01ee 0FBE      		out __SREG__,__tmp_reg__
 450 01f0 CDBF      		out __SP_L__,r28
 451 01f2 DF91      		pop r29
 452 01f4 CF91      		pop r28
 453 01f6 1F91      		pop r17
 454               	.LVL49:
 455 01f8 0F91      		pop r16
 456 01fa 0895      		ret
 457               		.cfi_endproc
 458               	.LFE3:
 460               		.section	.rodata.str1.1
 461               	.LC5:
 462 0053 4368 6172 		.string	"Charging State: %i"
 462      6769 6E67 
 462      2053 7461 
 462      7465 3A20 
 462      2569 00
 463               	.LC6:
 464 0066 566F 6C74 		.string	"Voltage: %i"
 464      6167 653A 
 464      2025 6900 
 465               	.LC7:
 466 0072 4375 7272 		.string	"Current: %i"
 466      656E 743A 
 466      2025 6900 
 467               	.LC8:
 468 007e 4261 7474 		.string	"Battery Temperature: %i"
 468      6572 7920 
 468      5465 6D70 
 468      6572 6174 
 468      7572 653A 
 469               	.LC9:
 470 0096 4261 7474 		.string	"Battery Charge: %i"
 470      6572 7920 
 470      4368 6172 
 470      6765 3A20 
 470      2569 00
 471               	.LC10:
 472 00a9 4261 7474 		.string	"Battery Capacity: %i"
 472      6572 7920 
 472      4361 7061 
 472      6369 7479 
 472      3A20 2569 
 473               		.text
 474               	.global	readGroupPacket3
 476               	readGroupPacket3:
 477               	.LFB4:
  67:sensors.c     **** void readGroupPacket3(void) {
 478               		.loc 1 67 0
 479               		.cfi_startproc
 480 01fc CF92      		push r12
 481               	.LCFI18:
 482               		.cfi_def_cfa_offset 3
 483               		.cfi_offset 12, -2
 484 01fe DF92      		push r13
 485               	.LCFI19:
 486               		.cfi_def_cfa_offset 4
 487               		.cfi_offset 13, -3
 488 0200 EF92      		push r14
 489               	.LCFI20:
 490               		.cfi_def_cfa_offset 5
 491               		.cfi_offset 14, -4
 492 0202 FF92      		push r15
 493               	.LCFI21:
 494               		.cfi_def_cfa_offset 6
 495               		.cfi_offset 15, -5
 496 0204 0F93      		push r16
 497               	.LCFI22:
 498               		.cfi_def_cfa_offset 7
 499               		.cfi_offset 16, -6
 500 0206 1F93      		push r17
 501               	.LCFI23:
 502               		.cfi_def_cfa_offset 8
 503               		.cfi_offset 17, -7
 504 0208 CF93      		push r28
 505               	.LCFI24:
 506               		.cfi_def_cfa_offset 9
 507               		.cfi_offset 28, -8
 508 020a DF93      		push r29
 509               	.LCFI25:
 510               		.cfi_def_cfa_offset 10
 511               		.cfi_offset 29, -9
 512 020c CDB7      		in r28,__SP_L__
 513 020e DEB7      		in r29,__SP_H__
 514               	.LCFI26:
 515               		.cfi_def_cfa_register 28
 516 0210 C258      		subi r28,-126
 517 0212 D109      		sbc r29,__zero_reg__
 518               	.LCFI27:
 519               		.cfi_def_cfa_offset 140
 520 0214 0FB6      		in __tmp_reg__,__SREG__
 521 0216 F894      		cli
 522 0218 DEBF      		out __SP_H__,r29
 523 021a 0FBE      		out __SREG__,__tmp_reg__
 524 021c CDBF      		out __SP_L__,r28
 525               	/* prologue: function */
 526               	/* frame size = 130 */
 527               	/* stack size = 138 */
 528               	.L__stack_usage = 138
 529               	.L9:
  71:sensors.c     **** 	while(UCSR0A & 0x80) /* clear the receive buffer */
 530               		.loc 1 71 0 discriminator 1
 531 021e 8091 C000 		lds r24,192
 532 0222 87FF      		sbrs r24,7
 533 0224 00C0      		rjmp .L13
  72:sensors.c     **** 	  i = UDR0;
 534               		.loc 1 72 0
 535 0226 8091 C600 		lds r24,198
 536 022a 00C0      		rjmp .L9
 537               	.L13:
  73:sensors.c     **** 	byteTx(142);  /* sensor opcode */
 538               		.loc 1 73 0
 539 022c 8EE8      		ldi r24,lo8(-114)
 540 022e 0E94 0000 		call byteTx
 541               	.LVL50:
  74:sensors.c     **** 	byteTx(3);   /* send request for packet 3 */
 542               		.loc 1 74 0
 543 0232 83E0      		ldi r24,lo8(3)
 544 0234 0E94 0000 		call byteTx
 545               	.LVL51:
 546 0238 7E01      		movw r14,r28
 547 023a 89E7      		ldi r24,121
 548 023c E80E      		add r14,r24
 549 023e F11C      		adc r15,__zero_reg__
 550 0240 6701      		movw r12,r14
 551 0242 9AE0      		ldi r25,10
 552 0244 C90E      		add r12,r25
 553 0246 D11C      		adc r13,__zero_reg__
 554 0248 8701      		movw r16,r14
 555               	.LVL52:
 556               	.L12:
  77:sensors.c     **** 	  group3Data[i] = byteRx();  /* read each sensor byte */
 557               		.loc 1 77 0 discriminator 2
 558 024a 0E94 0000 		call byteRx
 559               	.LVL53:
 560 024e F701      		movw r30,r14
 561 0250 8193      		st Z+,r24
 562 0252 7F01      		movw r14,r30
  75:sensors.c     **** 	for(i = 0; i < 10; i++) //10 is size of group
 563               		.loc 1 75 0 discriminator 2
 564 0254 EC15      		cp r30,r12
 565 0256 FD05      		cpc r31,r13
 566 0258 01F4      		brne .L12
  82:sensors.c     **** 	sprintf(chargingState, "Charging State: %i", (int)group3Data[0]);
 567               		.loc 1 82 0
 568 025a F801      		movw r30,r16
 569 025c 8081      		ld r24,Z
 570 025e 1F92      		push __zero_reg__
 571 0260 8F93      		push r24
 572 0262 80E0      		ldi r24,lo8(.LC5)
 573 0264 90E0      		ldi r25,hi8(.LC5)
 574 0266 9F93      		push r25
 575 0268 8F93      		push r24
 576 026a 7E01      		movw r14,r28
 577 026c F9E4      		ldi r31,73
 578 026e EF0E      		add r14,r31
 579 0270 F11C      		adc r15,__zero_reg__
 580 0272 FF92      		push r15
 581 0274 EF92      		push r14
 582 0276 0E94 0000 		call sprintf
 583               	.LVL54:
  83:sensors.c     **** 	transmit(chargingState);
 584               		.loc 1 83 0
 585 027a C701      		movw r24,r14
 586 027c 0E94 0000 		call transmit
 587               	.LVL55:
 588               	.LBB30:
 589               	.LBB31:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 590               		.loc 1 126 0
 591 0280 F801      		movw r30,r16
 592 0282 8181      		ldd r24,Z+1
 593 0284 90E0      		ldi r25,0
 594 0286 982F      		mov r25,r24
 595 0288 8827      		clr r24
 596               		.loc 1 127 0
 597 028a 2281      		ldd r18,Z+2
 598 028c 822B      		or r24,r18
 599               	.LBE31:
 600               	.LBE30:
  88:sensors.c     **** 	sprintf(voltageArray, "Voltage: %i", (int)voltage);
 601               		.loc 1 88 0
 602 028e 9F93      		push r25
 603               	.LVL56:
 604 0290 8F93      		push r24
 605 0292 80E0      		ldi r24,lo8(.LC6)
 606 0294 90E0      		ldi r25,hi8(.LC6)
 607 0296 9F93      		push r25
 608 0298 8F93      		push r24
 609 029a 7E01      		movw r14,r28
 610 029c FAE6      		ldi r31,106
 611 029e EF0E      		add r14,r31
 612 02a0 F11C      		adc r15,__zero_reg__
 613 02a2 FF92      		push r15
 614 02a4 EF92      		push r14
 615 02a6 0E94 0000 		call sprintf
 616               	.LVL57:
  89:sensors.c     **** 	transmit(voltageArray);
 617               		.loc 1 89 0
 618 02aa C701      		movw r24,r14
 619 02ac 0E94 0000 		call transmit
 620               	.LVL58:
 621               	.LBB32:
 622               	.LBB33:
 128:sensors.c     **** 	return total; 
 129:sensors.c     **** 
 130:sensors.c     **** }
 131:sensors.c     **** 
 132:sensors.c     **** int16_t twoBytesIntoInt(uint8_t hi, uint8_t lo) {
 133:sensors.c     **** 	uint16_t total = (hi << 8);
 623               		.loc 1 133 0
 624 02b0 F801      		movw r30,r16
 625 02b2 8381      		ldd r24,Z+3
 626 02b4 90E0      		ldi r25,0
 627 02b6 982F      		mov r25,r24
 628 02b8 8827      		clr r24
 629               	.LVL59:
 134:sensors.c     **** 	total = total | lo;
 630               		.loc 1 134 0
 631 02ba 2481      		ldd r18,Z+4
 632 02bc 822B      		or r24,r18
 633               	.LVL60:
 634               	.LBE33:
 635               	.LBE32:
  94:sensors.c     **** 	sprintf(currentArray, "Current: %i", (int)current);
 636               		.loc 1 94 0
 637 02be 9F93      		push r25
 638 02c0 8F93      		push r24
 639 02c2 80E0      		ldi r24,lo8(.LC7)
 640 02c4 90E0      		ldi r25,hi8(.LC7)
 641 02c6 9F93      		push r25
 642 02c8 8F93      		push r24
 643 02ca 7E01      		movw r14,r28
 644 02cc FAE5      		ldi r31,90
 645 02ce EF0E      		add r14,r31
 646 02d0 F11C      		adc r15,__zero_reg__
 647 02d2 FF92      		push r15
 648 02d4 EF92      		push r14
 649 02d6 0E94 0000 		call sprintf
 650               	.LVL61:
  95:sensors.c     **** 	transmit(currentArray);
 651               		.loc 1 95 0
 652 02da C701      		movw r24,r14
 653 02dc 0E94 0000 		call transmit
 654               	.LVL62:
  98:sensors.c     **** 	int16_t battTemp = group3Data[5];
 655               		.loc 1 98 0
 656 02e0 F801      		movw r30,r16
 657 02e2 8581      		ldd r24,Z+5
 100:sensors.c     **** 	sprintf(battTempArray, "Battery Temperature: %i", (int)battTemp);
 658               		.loc 1 100 0
 659 02e4 1F92      		push __zero_reg__
 660 02e6 8F93      		push r24
 661 02e8 80E0      		ldi r24,lo8(.LC8)
 662 02ea 90E0      		ldi r25,hi8(.LC8)
 663 02ec 9F93      		push r25
 664 02ee 8F93      		push r24
 665 02f0 CE01      		movw r24,r28
 666 02f2 0196      		adiw r24,1
 667 02f4 7C01      		movw r14,r24
 668 02f6 FF92      		push r15
 669 02f8 8F93      		push r24
 670 02fa 0E94 0000 		call sprintf
 671               	.LVL63:
 101:sensors.c     **** 	transmit(battTempArray);
 672               		.loc 1 101 0
 673 02fe C701      		movw r24,r14
 674 0300 0E94 0000 		call transmit
 675               	.LVL64:
 676               	.LBB34:
 677               	.LBB35:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 678               		.loc 1 126 0
 679 0304 F801      		movw r30,r16
 680 0306 8681      		ldd r24,Z+6
 681 0308 90E0      		ldi r25,0
 682 030a 982F      		mov r25,r24
 683 030c 8827      		clr r24
 127:sensors.c     **** 	total = total | lo;
 684               		.loc 1 127 0
 685 030e 2781      		ldd r18,Z+7
 686 0310 822B      		or r24,r18
 687               	.LBE35:
 688               	.LBE34:
 105:sensors.c     **** 	sprintf(batteryChargeArray, "Battery Charge: %i", (int)batteryCharge);
 689               		.loc 1 105 0
 690 0312 9F93      		push r25
 691               	.LVL65:
 692 0314 8F93      		push r24
 693 0316 80E0      		ldi r24,lo8(.LC9)
 694 0318 90E0      		ldi r25,hi8(.LC9)
 695 031a 9F93      		push r25
 696 031c 8F93      		push r24
 697 031e 7E01      		movw r14,r28
 698 0320 F3E3      		ldi r31,51
 699 0322 EF0E      		add r14,r31
 700 0324 F11C      		adc r15,__zero_reg__
 701 0326 FF92      		push r15
 702 0328 EF92      		push r14
 703 032a 0E94 0000 		call sprintf
 704               	.LVL66:
 106:sensors.c     **** 	transmit(batteryChargeArray);
 705               		.loc 1 106 0
 706 032e C701      		movw r24,r14
 707 0330 0E94 0000 		call transmit
 708               	.LVL67:
 709               	.LBB36:
 710               	.LBB37:
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 711               		.loc 1 126 0
 712 0334 F801      		movw r30,r16
 713 0336 8085      		ldd r24,Z+8
 714 0338 90E0      		ldi r25,0
 715 033a 982F      		mov r25,r24
 716 033c 8827      		clr r24
 127:sensors.c     **** 	total = total | lo;
 717               		.loc 1 127 0
 718 033e 2185      		ldd r18,Z+9
 719 0340 822B      		or r24,r18
 720               	.LBE37:
 721               	.LBE36:
 110:sensors.c     **** 	sprintf(batteryCapacityArray, "Battery Capacity: %i", (int)batteryCapacity);
 722               		.loc 1 110 0
 723 0342 9F93      		push r25
 724               	.LVL68:
 725 0344 8F93      		push r24
 726 0346 80E0      		ldi r24,lo8(.LC10)
 727 0348 90E0      		ldi r25,hi8(.LC10)
 728 034a 9F93      		push r25
 729 034c 8F93      		push r24
 730 034e 8E01      		movw r16,r28
 731 0350 055E      		subi r16,-27
 732 0352 1F4F      		sbci r17,-1
 733 0354 1F93      		push r17
 734 0356 0F93      		push r16
 735 0358 0E94 0000 		call sprintf
 736               	.LVL69:
 111:sensors.c     **** 	transmit(batteryCapacityArray);
 737               		.loc 1 111 0
 738 035c 0FB6      		in __tmp_reg__,__SREG__
 739 035e F894      		cli
 740 0360 DEBF      		out __SP_H__,r29
 741 0362 0FBE      		out __SREG__,__tmp_reg__
 742 0364 CDBF      		out __SP_L__,r28
 743 0366 C801      		movw r24,r16
 744 0368 0E94 0000 		call transmit
 745               	.LVL70:
 746               	/* epilogue start */
 112:sensors.c     **** }
 747               		.loc 1 112 0
 748 036c CE57      		subi r28,126
 749 036e DF4F      		sbci r29,-1
 750 0370 0FB6      		in __tmp_reg__,__SREG__
 751 0372 F894      		cli
 752 0374 DEBF      		out __SP_H__,r29
 753 0376 0FBE      		out __SREG__,__tmp_reg__
 754 0378 CDBF      		out __SP_L__,r28
 755 037a DF91      		pop r29
 756 037c CF91      		pop r28
 757 037e 1F91      		pop r17
 758 0380 0F91      		pop r16
 759 0382 FF90      		pop r15
 760 0384 EF90      		pop r14
 761 0386 DF90      		pop r13
 762 0388 CF90      		pop r12
 763 038a 0895      		ret
 764               		.cfi_endproc
 765               	.LFE4:
 767               	.global	readSensors
 769               	readSensors:
 770               	.LFB1:
   3:sensors.c     **** void readSensors(void) {
 771               		.loc 1 3 0
 772               		.cfi_startproc
 773               	/* prologue: function */
 774               	/* frame size = 0 */
 775               	/* stack size = 0 */
 776               	.L__stack_usage = 0
   5:sensors.c     **** 	readWallSignal();
 777               		.loc 1 5 0
 778 038c 0E94 0000 		call readWallSignal
 779               	.LVL71:
   6:sensors.c     **** 	readCliffSensors();
 780               		.loc 1 6 0
 781 0390 0E94 0000 		call readCliffSensors
 782               	.LVL72:
   7:sensors.c     **** 	readGroupPacket3();
 783               		.loc 1 7 0
 784 0394 0C94 0000 		jmp readGroupPacket3
 785               	.LVL73:
 786               		.cfi_endproc
 787               	.LFE1:
 789               	.global	twoUBytesIntoInt
 791               	twoUBytesIntoInt:
 792               	.LFB6:
 125:sensors.c     **** uint16_t twoUBytesIntoInt(uint8_t hi, uint8_t lo) {
 793               		.loc 1 125 0
 794               		.cfi_startproc
 795               	.LVL74:
 796               	/* prologue: function */
 797               	/* frame size = 0 */
 798               	/* stack size = 0 */
 799               	.L__stack_usage = 0
 126:sensors.c     **** 	uint16_t total = (hi << 8);
 800               		.loc 1 126 0
 801 0398 70E0      		ldi r23,0
 802               	.LVL75:
 130:sensors.c     **** }
 803               		.loc 1 130 0
 804 039a 9B01      		movw r18,r22
 805 039c 382B      		or r19,r24
 806 039e C901      		movw r24,r18
 807               	.LVL76:
 808 03a0 0895      		ret
 809               		.cfi_endproc
 810               	.LFE6:
 812               	.global	twoBytesIntoInt
 814               	twoBytesIntoInt:
 815               	.LFB7:
 132:sensors.c     **** int16_t twoBytesIntoInt(uint8_t hi, uint8_t lo) {
 816               		.loc 1 132 0
 817               		.cfi_startproc
 818               	.LVL77:
 819               	/* prologue: function */
 820               	/* frame size = 0 */
 821               	/* stack size = 0 */
 822               	.L__stack_usage = 0
 133:sensors.c     **** 	uint16_t total = (hi << 8);
 823               		.loc 1 133 0
 824 03a2 70E0      		ldi r23,0
 825               	.LVL78:
 135:sensors.c     **** 	return total; 
 136:sensors.c     **** }...
 826               		.loc 1 136 0
 827 03a4 9B01      		movw r18,r22
 828 03a6 382B      		or r19,r24
 829 03a8 C901      		movw r24,r18
 830               	.LVL79:
 831 03aa 0895      		ret
 832               		.cfi_endproc
 833               	.LFE7:
 835               	.Letext0:
 836               		.file 2 "/usr/lib/avr/include/stdint.h"
 837               		.file 3 "<built-in>"
 838               		.file 4 "cmod.h"
 839               		.file 5 "/usr/lib/avr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 sensors.c
     /tmp/ccMu68lw.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccMu68lw.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccMu68lw.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccMu68lw.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccMu68lw.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccMu68lw.s:12     .text:0000000000000000 transmit
     /tmp/ccMu68lw.s:99     .text:0000000000000046 readWallSignal
     /tmp/ccMu68lw.s:216    .text:00000000000000c0 readCliffSensors
     /tmp/ccMu68lw.s:476    .text:00000000000001fc readGroupPacket3
     /tmp/ccMu68lw.s:769    .text:000000000000038c readSensors
     /tmp/ccMu68lw.s:791    .text:0000000000000398 twoUBytesIntoInt
     /tmp/ccMu68lw.s:814    .text:00000000000003a2 twoBytesIntoInt

UNDEFINED SYMBOLS
byteTx
byteRx
sprintf
__do_copy_data
